#!/usr/bin/env bash

# This script runs pre-commit tests and fails when any of those fail with the
# respective script's return value. For this reason, return values for this
# script are not well-defined and will likely change over time.

SCRIPT_SRC="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd -P )"

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=7f6bfba0c5c1ccafe2b7382dc3f625fa6bd09aca
fi

# Redirect all output to STDERR because we don't want to break someone's workflow with
# unexpected error messages in STDOUT
exec 1>&2

# Fail on non-zero retval
set -e

echo "[POLICY] === Executing Commit Hook ==="

# Check launchpad files
GIT_AVAILABLE=1 ${SCRIPT_SRC}/../scripts/check_launchpad.sh 2>&1 | (sed -e 's/^/[POLICY] /')
# 2 is returned if binaries are missing or the index is unreachable.
# We don't want to block the commit on that. Using PIPESTATUS because otherwise
# we'd check for the retval of sed instead of check_launchpad.sh
success=${PIPESTATUS[0]}
if [ $success -ne 0 -a $success -ne 2 ]; then
    exit 1
elif [ $success -eq 2 ]; then
    echo "[POLICY] Verification aborted. Continuing..."
fi

# Validate books
${SCRIPT_SRC}/../scripts/validate_guides.sh 2>&1 | (sed -e 's/^/[POLICY] /')

